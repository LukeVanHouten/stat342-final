library(maxLik2)
install.packages(maxLik2)
install.packages("maxLik2)
install.packages("maxLik2")
loglik <- function(psi, T, n){
if (psi > 1 | psi < 0)
return(NA)
else
return(log(choose(n, T)) + (T * log(1 - psi)) - (n * log(2 - psi)))
}
estimation <- maxLik2(loglik = loglik, start = 0.55, method = "NR", tol = 1e-4, T = 8, n = 170)
# Chunk 1: setup
#Use this code chunk to include libraries, and set global options.
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(maxLik)
library(reshape2)
loglik <- function(psi, T, n){
if (psi > 1 | psi < 0)
return(NA)
else
return(log(choose(n, T)) + (T * log(1 - psi)) - (n * log(2 - psi)))
}
estimation <- maxLik(loglik = loglik, start = 0.55, method = "NR", tol = 1e-4, T = 8, n = 170)
install.packages("maxLik2")
R.version
#Use this code chunk to include libraries, and set global options.
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(maxLik)
library(reshape2)
library(fastR2)
# Chunk 1: setup
#Use this code chunk to include libraries, and set global options.
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(maxLik)
library(reshape2)
library(fastR2)
loglik <- function(psi, T, n){
if (psi > 1 | psi < 0)
return(NA)
else
return(log(choose(n, T)) + (T * log(1 - psi)) - (n * log(2 - psi)))
}
estimation <- maxLik2(loglik = loglik, start = 0.55, method = "NR", tol = 1e-4, T = 8, n = 170)
print(estimation)
